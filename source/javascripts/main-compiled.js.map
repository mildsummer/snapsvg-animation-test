{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main-compiled.js","sourcesContent":["import $ from 'jquery';\n\nimport AnimatedPolygon from './components/AnimatedPolygon';\nimport AnimatedRect from './components/AnimatedRect';\nimport AnimatedPath from './components/AnimatedPath';\nimport AnimatedCircle from './components/AnimatedCircle';\n\nvar elasticOut = require('eases/elastic-out');\n\n$(function() {\n\n  let snap = Snap(500, 500);\n  $('.svg').append(snap.node);\n\n  // SVGファイルの読み込み\n  let loadSvg = function(url) {\n    return new Promise(function(resolve, reject) {\n      Snap.load(url, function(svg) {\n        if(svg) {\n          resolve(svg);\n        } else {\n          reject(svg);\n          return;\n        }\n      });\n    })\n  };\n\n  // すべて読み込んで、最初のものを描画\n  let files = ['./materials/house.svg', './materials/house2.svg', './materials/house3.svg'];\n  Promise.all(files.map(loadSvg))\n    .then(function(svgs) {\n      let polygons = svgs.map(function(svg) {\n        return svg.select('#outline');\n      });\n      let rects = svgs.map(function(svg) {\n        return svg.select('#part');\n      });\n      let paths = svgs.map(function(svg) {\n        return svg.select('#bed');\n      });\n      let paths2 = svgs.map(function(svg) {\n        return svg.select('#path');\n      });\n      let circles = svgs.map(function(svg) {\n        return svg.select('#circle');\n      });\n      let animatedPolygon = new AnimatedPath(polygons, snap);\n      let animatedRect = new AnimatedRect(rects, snap);\n      let animatedPath = new AnimatedPath(paths, snap);\n      let animatedPath2 = new AnimatedPath(paths2, snap);\n      let animatedCircle = new AnimatedCircle(circles, snap);\n      files.map(function(file, index) {\n        $('body').append($('<button>').text(index).click(function() {\n          animatedPolygon.animate(index, 1000, elasticOut);\n          animatedRect.animate(index, 1000, elasticOut);\n          animatedPath.animate(index, 1000, elasticOut);\n          animatedPath2.animate(index, 1000, elasticOut);\n          animatedCircle.animate(index, 1000, elasticOut);\n        }));\n      });\n    });\n    //.catch(function(err) {\n    //  console.error(err);\n    //});\n\n\n});"]}